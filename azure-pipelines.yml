# Trigger the pipeline on push to main branch
trigger:
  branches:
    include:
      - main

# Optional: Trigger on pull requests
pr:
  branches:
    include:
      - main

# Use the self-hosted agent pool
pool:
  name: cr-runner
  demands:
    - agent.name -equals cr-runner

# Define Python version as a variable
variables:
  pythonVersion: '3.10'

# Define stages
stages:
  - stage: BuildAndDeploy
    displayName: "Build and Deploy FastAPI"
    jobs:
    
      # ----------------------
      # ‚úÖ Job 1: Agent Info
      # ----------------------
      - job: InfoJob
        displayName: "Check Agent & Source Info"
        steps:
          - script: |
              echo "üîç Agent Name: $(Agent.Name)"
              echo "üíª Machine Name: $(Agent.MachineName)"
              echo "üìÇ Working Directory: $(System.DefaultWorkingDirectory)"
              python3 --version
            displayName: "Print Agent & Python Info"

          - script: |
              echo "üìÅ Code Directory: $BUILD_SOURCESDIRECTORY"
              cd $BUILD_SOURCESDIRECTORY
              ls -la
            displayName: "Check Source Code Location"

      # ----------------------
      # üõ† Job 2: Build App
      # ----------------------
      - job: BuildJob
        displayName: "Build FastAPI Application"
        dependsOn: InfoJob
        steps:
          - script: |
              cd $BUILD_SOURCESDIRECTORY
              python3 -m venv venv
              source venv/bin/activate
              echo "‚úÖ Virtual environment created"
            displayName: "Create Virtual Environment"

          - script: |
              cd $BUILD_SOURCESDIRECTORY
              source venv/bin/activate
              pip install --upgrade pip
              pip install -r requirements.txt
            displayName: "Install Dependencies"

      # ----------------------
      # üöÄ Job 3: Deploy App
      # ----------------------
      - job: DeployJob
        displayName: "Deploy FastAPI Application"
        dependsOn: BuildJob
        steps:
          - script: |
              cd $BUILD_SOURCESDIRECTORY

              echo "üõë Checking for existing Uvicorn processes..."
              pkill -f "uvicorn" && echo "‚úÖ Existing process killed" || echo "‚ö†Ô∏è No process found"

              echo "üöÄ Starting FastAPI app..."
              source venv/bin/activate
              nohup uvicorn main:app --host 0.0.0.0 --port 8000 --reload > fastapi.log 2>&1 &

              sleep 3
              pgrep -f "uvicorn" > /dev/null
              if [ $? -ne 0 ]; then
                echo "‚ùå Failed to start FastAPI app"
                cat fastapi.log
                exit 1
              else
                echo "‚úÖ FastAPI app is running"
              fi
            displayName: "Kill Old Process & Start New FastAPI App"

          - script: |
              echo "üìú Last 30 lines of FastAPI Logs:"
              tail -n 30 $BUILD_SOURCESDIRECTORY/fastapi.log
            displayName: "Show FastAPI Log Output"
